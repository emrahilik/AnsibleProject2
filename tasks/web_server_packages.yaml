- name: Install Application Packages
  when: ansible_facts['hostname'] == "web-server"
  yum:
    name: "{{app_packages}}" # this values is coming from main_vars.yaml.
                             # Because we already defined them.
    state: latest

- name: Install Remi Repositories
  when: ansible_facts['hostname'] == "web-server"
  yum: 
    name: http://rpms.remirepo.net/enterprise/remi-release-7.rpm
    state: present

- name: Install yum-utils
  when: ansible_facts['hostname'] == "web-server"
  yum:
    name: yum-utils
    state: latest
  


- name: Enable remi-php73 repository
  when: ansible_facts['hostname'] == "web-server"
  yum_repository:
    description: Extra Packages for Enterprise Linux 7 - $basearch
    mirrorlist: http://cdn.remirepo.net/enterprise/7/php73/mirror
    name: remi-php73
    enabled: yes 

- name: Updated Repository on web-server
  when: ansible_facts['hostname'] == "web-server"
  yum: 
    name: "*"
    state: latest 

- name: Install PHP7.3
  when: ansible_facts['hostname'] == "web-server"
  yum: 
    name: "{{php_package}}"
    state: present
    enablerepo: "remi-*,epel,base"

# if you need the link you can you here. but in this case we do not need 
#- name: Create Link for PHP   # we are creating the soft-link because when someone check th version the php. it is going to be easy :)) 
#  when: ansible_facts['hostname'] == "web-server"
#  file:
#    src: /opt/remi/php72/root/usr/bin/php
#    dest: /usr/bin/php
#    state: link 


- name: Download Wordpress - unarchive   # unarchive command will get the file from internet and download and unzip and save it under tmp
  when: ansible_facts['hostname'] == "web-server"
  unarchive: 
    src: https://wordpress.org/latest.tar.gz
    dest: /tmp/
    remote_src: yes 
  
- name: Copy  Wordpress files to /var/www/html - unarchive 
  when: ansible_facts['hostname'] == "web-server"
  copy:
    src: /tmp/wordpress/
    dest: /var/www/html
    remote_src: yes
    owner: apache      # we have to check the status of apache ansible -i inventory.yaml web-server -m command  -a "systemctl status httpd"
    group: apache      


    # You have to go "yum repos: On CentOS7"
    # Location: ""/etc/yum.repos.d/""  you have to check 
    # error 1> if you get the error >  you have to add the metalink or mirrorlist very important just be careful :))
     # it comes from repository 
    # fatal: [web-server]: FAILED! => {"changed": false, "msg": "Parameter 'baseurl', 'metalink' or 'mirrorlist' is required."}

    # error2> if you get the error  > you have to add description 
    # it comes from repository 
    # fatal: [web-server]: FAILED! => {"changed": false, "msg": "Parameter 'description' is required."}


    # ansible -i inventory.yaml web-server -m command -a "php -v" for checking php version using add-hoc command